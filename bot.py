import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import FSInputFile, InputMediaPhoto, CallbackQuery, Message
from aiogram.filters import CommandStart
from aiogram.fsm.storage.memory import MemoryStorage
from core.settings import settings
from core.keyboards import main_keyboard, project_keyboard, author_keyboard

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_TOKEN' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
bot = Bot(token=settings.bots.bot_token)
dp = Dispatcher(storage=MemoryStorage())


# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_balances = {}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start(message: Message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        user_balances[user_id] = {'balance': 0, 'penalties': 0}
        await message.answer("–≠—Ç–æ —á–∞—Ç-–±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –∏ —Ä–∞–∑–º–µ—Ç–∫–∏ –æ–±—É—á–∞—é—â–∏—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö.", reply_markup=main_keyboard)
    else:
        await message.answer("–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!", reply_markup=main_keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç-–±–æ—Ç–µ"
@dp.message(F.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç-–±–æ—Ç–µ')
async def bot_info(message: Message):
    photo_id = "AgACAgIAAxkDAAOWZx_5uCSgtlqgw-wGK7ySD0siGG0AAtPhMRu1awABSf9ysR7lIyeoAQADAgADeAADNgQ"
    await message.answer_photo(photo=photo_id, caption="–≠—Ç–æ —á–∞—Ç-–±–æ—Ç –¥–ª—è —Å–±–æ—Ä–∞ –∏ —Ä–∞–∑–º–µ—Ç–∫–∏ –æ–±—É—á–∞—é—â–∏—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ"
@dp.message(F.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ')
async def project_info(message: Message):
    photo_id = "AgACAgIAAxkDAAOWZx_5uCSgtlqgw-wGK7ySD0siGG0AAtPhMRu1awABSf9ysR7lIyeoAQADAgADeAADNgQ"
    await message.answer_photo(
        photo=photo_id,
        caption="*–ß–∞—Ç-–±–æ—Ç '–†–∞–∑–º–µ—Ç—ã—à'* —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –º–∞–≥–∏—Å—Ç–µ—Ä—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã, –ø–æ—Å–≤—è—â—ë–Ω–Ω–æ–π —Å–æ–∑–¥–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ —Å—Ñ–µ—Ä–µ –≤–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂–∞ *Voice3Frame*.\n\n–ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞: *–¢—Ä–∏—Ñ–æ–Ω–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω*",
        parse_mode="Markdown",
        reply_markup=project_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –±–∞–ª–∞–Ω—Å"
@dp.message(F.text == '–ú–æ–π –±–∞–ª–∞–Ω—Å')
async def my_balance(message: Message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        user_balances[user_id] = {'balance': 0, 'penalties': 0}
    
    balance = user_balances[user_id]['balance']
    penalties = user_balances[user_id]['penalties']
    await message.answer(
        f"–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –±–∞–ª–ª–æ–≤: {balance} üíº\n"
        f"–®—Ç—Ä–∞—Ñ–Ω—ã—Ö –±–∞–ª–ª–æ–≤: {penalties} üò†\n"
        f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: *{balance - penalties}*",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–º–µ—Ç–∫–µ"
@dp.message(F.text == '–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–º–µ—Ç–∫–µ')
async def start_markup(message: Message):
    user_id = message.from_user.id
    if user_id not in user_balances:
        user_balances[user_id] = {'balance': 0, 'penalties': 0}
    
    user_balances[user_id]['balance'] += 1
    await message.answer("+ 1 –±–∞–ª–ª")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∞
@dp.callback_query(F.data == 'author_info')
async def author_info(callback: CallbackQuery):
    photo_id = "AgACAgIAAxkDAAOkZx_9MIy3zgF04WOIF26CKyPzAkwAAtjhMRu1awABSbJse_3Ba9rvAQADAgADcwADNgQ"
    await callback.message.answer_photo(
        photo=photo_id,
        caption="*–¢—Ä–∏—Ñ–æ–Ω–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω –ù–∏–∫–æ–ª–∞–µ–≤–∏—á*\n–°—Ç—É–¥–µ–Ω—Ç –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –ò–¢–ú–û\n–ì—Ä—É–ø–ø–∞: –†4123",
        parse_mode="Markdown",
        reply_markup=author_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–±—ç–∫-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞
@dp.callback_query(F.data == 'project_info')
async def return_to_project_info(callback: CallbackQuery):
    photo_id = "AgACAgIAAxkDAAOWZx_5uCSgtlqgw-wGK7ySD0siGG0AAtPhMRu1awABSf9ysR7lIyeoAQADAgADeAADNgQ"
    await callback.message.answer_photo(
        photo=photo_id,
        caption="*–ß–∞—Ç-–±–æ—Ç '–†–∞–∑–º–µ—Ç—ã—à'* —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –º–∞–≥–∏—Å—Ç–µ—Ä—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã, –ø–æ—Å–≤—è—â—ë–Ω–Ω–æ–π —Å–æ–∑–¥–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞ –≤ —Å—Ñ–µ—Ä–µ –≤–∏–¥–µ–æ–º–æ–Ω—Ç–∞–∂–∞ *Voice3Frame*.\n\n–ê–≤—Ç–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞: *–¢—Ä–∏—Ñ–æ–Ω–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω*",
        parse_mode="Markdown",
        reply_markup=project_keyboard
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        await dp.start_polling(bot)
    finally:
        print("–ë–æ—Ç –æ—Ç—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        await bot.session.close()

if __name__ == '__main__':
    asyncio.run(main())