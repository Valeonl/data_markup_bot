from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from typing import List, Dict, Any

def get_command_management_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∞–º–∏"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É")],
            [KeyboardButton(text="üìù –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")],
            [KeyboardButton(text="üé§ –¢–µ—Å—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è")],
            [KeyboardButton(text="üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def get_commands_list_keyboard(commands: List[Dict[str, Any]]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥"""
    keyboard = []
    for cmd in commands:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{cmd['tag']} - {cmd['description'][:30]}...",
                callback_data=f"cmd_{cmd['id']}"
            )
        ])
    keyboard.append([
        InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –≤—Å–µ", callback_data="delete_all_commands")
    ])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_command_actions_keyboard(command_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π —Å –∫–æ–º–∞–Ω–¥–æ–π"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ùå –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"delete_cmd_{command_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
                    callback_data="back_to_commands"
                )
            ]
        ]
    )

def get_user_markup_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã")],
            [KeyboardButton(text="üìä –ú–æ–∏ –∑–∞–ø–∏—Å–∏")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )
    return keyboard

def get_command_record_keyboard(command_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–æ–º–∞–Ω–¥—ã"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üé§ –ó–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É",
                    callback_data=f"record_cmd_{command_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
                    callback_data="skip_command"
                )
            ]
        ]
    )

def get_recordings_management_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å—è–º–∏"""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø–∏—Å–∏")],
            [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø–∏—Å–µ–π")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
        ],
        resize_keyboard=True
    )

def get_recording_review_keyboard(recording_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø–∏—Å–∏"""
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å",
                    callback_data=f"approve_rec_{recording_id}"
                ),
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
                    callback_data=f"reject_rec_{recording_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å",
                    callback_data="skip_recording"
                )
            ]
        ]
    ) 